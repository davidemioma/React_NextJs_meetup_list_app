{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emiomadavid/Desktop/Uche/React/NextJs_React_App_advanced/pages/[meetUpId]/index.js\";\nimport MeetUpDetailLayout from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction MeetUpDetail(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetUpData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetUpData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetUpDetailLayout, {\n      image: props.meetUpData.image,\n      title: props.meetUpData.title,\n      address: props.meetUpData.address,\n      description: props.meetUpData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://new_user23:kingjames23@cluster0.a8bvu.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetUpId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetUpId;\n  const client = await MongoClient.connect(\"mongodb+srv://new_user23:kingjames23@cluster0.a8bvu.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetup = await meetupsCollections.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  client.close();\n  return {\n    props: {\n      meetUpData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetUpDetail;","map":{"version":3,"sources":["/Users/emiomadavid/Desktop/Uche/React/NextJs_React_App_advanced/pages/[meetUpId]/index.js"],"names":["MeetUpDetailLayout","MongoClient","ObjectId","Fragment","Head","MeetUpDetail","props","meetUpData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetUpId","toString","getStaticProps","context","findOne","id"],"mappings":";;AAAA,OAAOA,kBAAP,MAA+B,uCAA/B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,kBAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA5B,EAAwCC,OAAxC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMS,MAAM,GAAG,MAAMV,kBAAkB,CAACgB,OAAnB,CAA2B;AAAEZ,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AAAf,GAA3B,CAArB;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV0B,QAAAA,EAAE,EAAEP,MAAM,CAACN,GAAP,CAAWS,QAAX,EADM;AAEVrB,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAFJ;AAGVE,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHJ;AAIVC,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAJN;AAKVF,QAAAA,WAAW,EAAEiB,MAAM,CAACjB;AALV;AADP;AADF,GAAP;AAWD;AAED,eAAeJ,YAAf","sourcesContent":["import MeetUpDetailLayout from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction MeetUpDetail(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetUpData.title}</title>\n        <meta name=\"description\" content={props.meetUpData.description} />\n      </Head>\n      <MeetUpDetailLayout\n        image={props.meetUpData.image}\n        title={props.meetUpData.title}\n        address={props.meetUpData.address}\n        description={props.meetUpData.description}\n      />\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://new_user23:kingjames23@cluster0.a8bvu.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollections = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollections.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetUpId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetUpId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://new_user23:kingjames23@cluster0.a8bvu.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollections = db.collection(\"meetups\");\n\n  const meetup = await meetupsCollections.findOne({ _id: ObjectId(meetUpId) });\n\n  client.close();\n\n  return {\n    props: {\n      meetUpData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetUpDetail;\n"]},"metadata":{},"sourceType":"module"}