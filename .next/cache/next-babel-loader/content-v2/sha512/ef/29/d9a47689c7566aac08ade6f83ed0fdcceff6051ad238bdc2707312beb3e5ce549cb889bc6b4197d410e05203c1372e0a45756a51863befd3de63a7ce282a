{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emiomadavid/Desktop/Uche/React/NextJs_React_App_advanced/pages/index.js\";\nimport MeetUpList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMIE_DATA = [{\n  id: \"m1\",\n  title: \"My first meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 1234,  some city\",\n  description: \"This is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"My second meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 25, 1234,  some city\",\n  description: \"This is a second meetup\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetUpList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n} //If you have data that changes frquently and you need the request and response object use getServerSideProps(context).\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMIE_DATA,\n//     },\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://new_user23:kingjames23@cluster0.a8bvu.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollections = db.collection(\"meetups\");\n  const meetups = await meetupsCollections.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/emiomadavid/Desktop/Uche/React/NextJs_React_App_advanced/pages/index.js"],"names":["MeetUpList","MongoClient","DUMMIE_DATA","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollections","collection","find","toArray","close","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADkB,EAUlB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,mCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAVkB,CAApB;;AAoBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMN,OAAO,GAAG,MAAMK,kBAAkB,CAACE,IAAnB,GAA0BC,OAA1B,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA;AADJ,KADF;AAILU,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAeZ,QAAf","sourcesContent":["import MeetUpList from \"../components/meetups/MeetupList\";\n\nimport { MongoClient } from \"mongodb\";\n\nconst DUMMIE_DATA = [\n  {\n    id: \"m1\",\n    title: \"My first meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    address: \"Some address 5, 1234,  some city\",\n    description: \"This is a first meetup\",\n  },\n\n  {\n    id: \"m2\",\n    title: \"My second meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    address: \"Some address 25, 1234,  some city\",\n    description: \"This is a second meetup\",\n  },\n];\n\nfunction HomePage(props) {\n  return <MeetUpList meetups={props.meetups} />;\n}\n\n//If you have data that changes frquently and you need the request and response object use getServerSideProps(context).\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n\n//   const res = context.res;\n\n//   return {\n//     props: {\n//       meetups: DUMMIE_DATA,\n//     },\n//   };\n// }\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://new_user23:kingjames23@cluster0.a8bvu.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollections = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollections.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups,\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}